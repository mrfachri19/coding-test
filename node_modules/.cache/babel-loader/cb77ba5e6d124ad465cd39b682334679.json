{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// ** API Import\nimport { getAllProduct } from \"../../api\";\nexport const fetchProducts = createAsyncThunk(\"appProducts/fetchProducts\", async () => {\n  const response = await getAllProduct();\n  const datas = response.data.products;\n  return datas;\n});\n\n// export const fetchActivitybyid = createAsyncThunk(\n//   \"appTodo/fetchActivitybyid\",\n//   async (id) => {\n//     const response = await getActivitybyid(`/${id}`);\n//     const datas = response.data;\n//     return {\n//       datas,\n//       id,\n//     };\n//   }\n// );\n\nexport const appProductSlice = createSlice({\n  name: \"appProducts\",\n  initialState: {\n    dataProducts: []\n    // taskid: {},\n  },\n\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.fulfilled, (state, action) => {\n      state.dataProducts = action.payload;\n    });\n    // .addCase(fetchActivitybyid.fulfilled, (state, action) => {\n    //   state.taskid = action.payload;\n    // });\n  }\n});\n\n// export const {} = appProductSlice.actions;\n\nexport default appProductSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getAllProduct","fetchProducts","response","datas","data","products","appProductSlice","name","initialState","dataProducts","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["D:/test-coding/src/views/Product/store.js"],"sourcesContent":["// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// ** API Import\r\nimport {getAllProduct} from \"../../api\";\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"appProducts/fetchProducts\",\r\n  async () => {\r\n    const response = await getAllProduct();\r\n    const datas = response.data.products;\r\n    return datas;\r\n  }\r\n);\r\n\r\n// export const fetchActivitybyid = createAsyncThunk(\r\n//   \"appTodo/fetchActivitybyid\",\r\n//   async (id) => {\r\n//     const response = await getActivitybyid(`/${id}`);\r\n//     const datas = response.data;\r\n//     return {\r\n//       datas,\r\n//       id,\r\n//     };\r\n//   }\r\n// );\r\n\r\nexport const appProductSlice = createSlice({\r\n  name: \"appProducts\",\r\n  initialState: {\r\n    dataProducts: [],\r\n    // taskid: {},\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.dataProducts = action.payload;\r\n      })\r\n      // .addCase(fetchActivitybyid.fulfilled, (state, action) => {\r\n      //   state.taskid = action.payload;\r\n      // });\r\n  },\r\n});\r\n\r\n// export const {} = appProductSlice.actions;\r\n\r\nexport default appProductSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,SAAQC,aAAa,QAAO,WAAW;AAEvC,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,2BAA2B,EAC3B,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMF,aAAa,EAAE;EACtC,MAAMG,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,QAAQ;EACpC,OAAOF,KAAK;AACd,CAAC,CACF;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,eAAe,GAAGR,WAAW,CAAC;EACzCS,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,YAAY,EAAE;IACd;EACF,CAAC;;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,aAAa,CAACa,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACN,YAAY,GAAGO,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC;IACF;IACA;IACA;EACJ;AACF,CAAC,CAAC;;AAEF;;AAEA,eAAeX,eAAe,CAACY,OAAO"},"metadata":{},"sourceType":"module"}