{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// ** API Import\nimport { getAllProduct } from \"../api\";\nexport const fetchProducts = createAsyncThunk(\"appProducts/fetchProducts\", async search => {\n  const response = await getAllProduct(`/search?q=${search}`);\n  const datas = response.datas;\n  return {\n    datas,\n    search\n  };\n});\nexport const fetchProductsId = createAsyncThunk(\"appProducts/fetchProductsId\", async id => {\n  const response = await getAllProduct(`/${id}`);\n  const datas = response.data;\n  return {\n    datas,\n    id\n  };\n});\nexport const appProductSlice = createSlice({\n  name: \"appProducts\",\n  initialState: {\n    dataProducts: [],\n    dataProductsId: {}\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.fulfilled, (state, action) => {\n      state.dataProducts = action.payload;\n    }).addCase(fetchProductsId.fulfilled, (state, action) => {\n      state.dataProductsId = action.payload;\n    });\n  }\n});\n\n// export const {} = appProductSlice.actions;\n\nexport default appProductSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getAllProduct","fetchProducts","search","response","datas","fetchProductsId","id","data","appProductSlice","name","initialState","dataProducts","dataProductsId","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["D:/test-coding/src/views/store.js"],"sourcesContent":["// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// ** API Import\r\nimport { getAllProduct } from \"../api\";\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"appProducts/fetchProducts\",\r\n  async (search) => {\r\n    const response = await getAllProduct(`/search?q=${search}`);\r\n    const datas = response.datas;\r\n    return { datas, search };\r\n  }\r\n);\r\n\r\nexport const fetchProductsId = createAsyncThunk(\r\n  \"appProducts/fetchProductsId\",\r\n  async (id) => {\r\n    const response = await getAllProduct(`/${id}`);\r\n    const datas = response.data;\r\n    return {\r\n      datas,\r\n      id,\r\n    };\r\n  }\r\n);\r\n\r\nexport const appProductSlice = createSlice({\r\n  name: \"appProducts\",\r\n  initialState: {\r\n    dataProducts: [],\r\n    dataProductsId: {},\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.dataProducts = action.payload;\r\n      })\r\n      .addCase(fetchProductsId.fulfilled, (state, action) => {\r\n        state.dataProductsId = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\n// export const {} = appProductSlice.actions;\r\n\r\nexport default appProductSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,SAASC,aAAa,QAAQ,QAAQ;AAEtC,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,2BAA2B,EAC3B,MAAOG,MAAM,IAAK;EAChB,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAAE,aAAYE,MAAO,EAAC,CAAC;EAC3D,MAAME,KAAK,GAAGD,QAAQ,CAACC,KAAK;EAC5B,OAAO;IAAEA,KAAK;IAAEF;EAAO,CAAC;AAC1B,CAAC,CACF;AAED,OAAO,MAAMG,eAAe,GAAGN,gBAAgB,CAC7C,6BAA6B,EAC7B,MAAOO,EAAE,IAAK;EACZ,MAAMH,QAAQ,GAAG,MAAMH,aAAa,CAAE,IAAGM,EAAG,EAAC,CAAC;EAC9C,MAAMF,KAAK,GAAGD,QAAQ,CAACI,IAAI;EAC3B,OAAO;IACLH,KAAK;IACLE;EACF,CAAC;AACH,CAAC,CACF;AAED,OAAO,MAAME,eAAe,GAAGV,WAAW,CAAC;EACzCW,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,CAAC;EACnB,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,aAAa,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACP,YAAY,GAAGQ,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDJ,OAAO,CAACX,eAAe,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACN,cAAc,GAAGO,MAAM,CAACC,OAAO;IACvC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;;AAEA,eAAeZ,eAAe,CAACa,OAAO"},"metadata":{},"sourceType":"module"}