{"ast":null,"code":"import axios from \"axios\";\nimport { URLAPI } from \"../utils/configs\";\nconst fullURL = path => {\n  return `${URLAPI}/${path}`;\n};\nexport const handleNetworkError = error => {\n  if (error.message === \"Network request failed\") {\n    alert(\"Kesalahan Jaringan\", \"Silakan periksa koneksi Anda dan coba kembali.\", \"iconNoInet\");\n  }\n  throw error;\n};\nconst get = api => async function () {\n  let param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  try {\n    return await axios(`${fullURL(api)}${param}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }, {\n      handleNetworkError\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getAllProduct = get(\"products\");\nconst API = {\n  getAllProduct\n};\nexport default API;","map":{"version":3,"names":["axios","URLAPI","fullURL","path","handleNetworkError","error","message","alert","get","api","param","method","headers","err","console","log","getAllProduct","API"],"sources":["D:/test-coding/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { URLAPI } from \"../utils/configs\";\r\n\r\nconst fullURL = (path) => {\r\n  return `${URLAPI}/${path}`;\r\n};\r\n\r\nexport const handleNetworkError = (error) => {\r\n  if (error.message === \"Network request failed\") {\r\n    alert(\r\n      \"Kesalahan Jaringan\",\r\n      \"Silakan periksa koneksi Anda dan coba kembali.\",\r\n      \"iconNoInet\"\r\n    );\r\n  }\r\n  throw error;\r\n};\r\n\r\nconst get =\r\n  (api) =>\r\n  async (param = \"\") => {\r\n    try {\r\n      return await axios(\r\n        `${fullURL(api)}${param}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        },\r\n        { handleNetworkError }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\nexport const getAllProduct = get(\"products\");\r\n\r\nconst API = {\r\n  getAllProduct,\r\n};\r\n\r\nexport default API;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,kBAAkB;AAEzC,MAAMC,OAAO,GAAIC,IAAI,IAAK;EACxB,OAAQ,GAAEF,MAAO,IAAGE,IAAK,EAAC;AAC5B,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAC3C,IAAIA,KAAK,CAACC,OAAO,KAAK,wBAAwB,EAAE;IAC9CC,KAAK,CACH,oBAAoB,EACpB,gDAAgD,EAChD,YAAY,CACb;EACH;EACA,MAAMF,KAAK;AACb,CAAC;AAED,MAAMG,GAAG,GACNC,GAAG,IACJ,kBAAsB;EAAA,IAAfC,KAAK,uEAAG,EAAE;EACf,IAAI;IACF,OAAO,MAAMV,KAAK,CACf,GAAEE,OAAO,CAACO,GAAG,CAAE,GAAEC,KAAM,EAAC,EACzB;MACEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,EACD;MAAER;IAAmB,CAAC,CACvB;EACH,CAAC,CAAC,OAAOS,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CAAC;AAEH,OAAO,MAAMG,aAAa,GAAGR,GAAG,CAAC,UAAU,CAAC;AAE5C,MAAMS,GAAG,GAAG;EACVD;AACF,CAAC;AAED,eAAeC,GAAG"},"metadata":{},"sourceType":"module"}